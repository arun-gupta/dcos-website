extends ../layouts/base-whitefooter.jade

block head
  title Fast Data | DC/OS
  meta(property='og:locale', content='en_US')
  meta(property='og:type', content='article')
  meta(property='og:title', content='Fast Data | DC/OS')
  meta(property='og:image', content='https://dcos.io/assets/images/social-img.png')
  meta(property='og:description', content='Fast Data on DC/OS')
  meta(property='og:url', content='https://dcos.io/')
  meta(property='og:site_name', content='DC/OS')
  meta(name='twitter:card', content='summary')
  meta(name='twitter:site', content='@dcos')
  meta(name='twitter:title', content='Fast Data | DC/OS')
  meta(name='twitter:card', content='summary_large_image')
  meta(name='twitter:image', content='https://dcos.io/assets/images/social-img.png')
  meta(name='twitter:description', content='Fast Data on DC/OS')

block content

  .container.container--dark-background.pb5.px2.sm-pb0(style="display: block;")
    .mx-auto.max-width-4
      +header(style="padding: 0;")

    .mx-auto.max-width-4
      .container__content.community-hero
        h1 Fast Data on DC/OS
        p.hero-subtitle Data comes from many sources, and is proliferating faster than ever before. Ordinary people are now able to track every click on their website and every beat of their heart. All of this data is collected in real time, but up until recently it was processed after it was collected, in order to find out what had happened in the past(...)




  //- Section 1
  .outer-container.bg-white.clearfix.py5.px2
    .row
      .max-width-4.mx-auto
        .col-8.center.mx-auto
          h2 How does DS/OS enable fast data?
          p Implementing a fast data pipeline can let you do amazing new things with the streams of data you have access to every day, but it also poses challenges that just aren’t a problem when you’re dealing with big data alone. Building your fast data pipeline---and the app that it supports---on top of the Datacenter Operating System (DC/OS) can help alleviate some of these challenges.

  .outer-container.bg-white.clearfix.pb5.px2
    .row
      .max-width-4.mx-auto
        .flex.flex-auto.flex-wrap
          .lg-col-4.col-6.xs-col-12.xs-center.px2.pb3
            h4 On-demand provisioning
            p Data services like message queues to track your datastream, processing programs, and databases to store your results all have different requirements. Provisioning them can be a huge challenge. DC/OS abstracts away the details and allows you to provision and run all of these pieces on a common set of resources with your containerized or legacy app. You can install most data services in the DC/OS universe with a single click in the GUI or single command from the CLI. When provisioning data services is easy, you can try out multiple options, allowing you to optimize your pipeline for performance; not provisioning time.
          .lg-col-4.col-6.xs-col-12.xs-center.px2.pb3
            h4 Simplified operations
            p Node failure is an expected challenge if you are running in a datacenter. If you are processing big data when a node fails, it can be manually restarted. But when you depend on fast data, every second counts. DC/OS provides a resilient architecture that automatically reschedules tasks that were running on nodes that failed. Logging, debugging, and metrics gathering are essential for smooth operations. Setting up these functions with DC/OS is easy, and with the release of DC/OS 1.9, they will be included with every cluster.
          .lg-col-4.col-6.xs-col-12.xs-center.px2.pb3
            h4 Elastic data infrastructure
            p When processing big data, you can gauge, and even control, how much processing power you need at any given time, by running your data through your pipeline in big batches. But fast data is unpredictable, and the amount of processing power you need can vary from moment to moment. DC/OS allows you to scale up, down, and out safely. It maximizes server efficiency during peak times, which saves you money and guards against downtime.



  //- Section 2
  .outer-container.bg-gray.clearfix.py5.px2
    .row
      .max-width-4.mx-auto
        .flex.flex-auto.flex-wrap
          h2.center Fast data resources

  //- Footer
  .container
    +footer
